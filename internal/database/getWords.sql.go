// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: getWords.sql

package database

import (
	"context"
)

const getWords = `-- name: GetWords :many
SELECT id, first, second, third FROM wordoftheminutes
ORDER BY id DESC
LIMIT $1 OFFSET $2
`

type GetWordsParams struct {
	Limit  int32
	Offset int32
}

func (q *Queries) GetWords(ctx context.Context, arg GetWordsParams) ([]Wordoftheminute, error) {
	rows, err := q.db.QueryContext(ctx, getWords, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Wordoftheminute
	for rows.Next() {
		var i Wordoftheminute
		if err := rows.Scan(
			&i.ID,
			&i.First,
			&i.Second,
			&i.Third,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
